# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'UI.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import pickle
import re
import numpy as np
import a

from nltk.corpus import stopwords
from nltk.stem.porter import PorterStemmer
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("Group 6")
        MainWindow.setWindowTitle("Group6")
        MainWindow.resize(734, 634)
        MainWindow.setMaximumSize(734, 634)
        MainWindow.setMinimumSize(734, 634)

        self.model = pickle.load(open("model1.clf", 'rb'))

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setStyleSheet("QWidget {\n"
                                         "    background-color: #121313;\n"
                                         "}")
        self.centralwidget.setObjectName("centralwidget")

        self.groupBox1 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox1.setGeometry(QtCore.QRect(10, 60, 711, 301))
        self.groupBox1.setStyleSheet("QGroupBox#groupBox1 {\n"
                                     "    background-color: #242526;\n"
                                     "    border: none;\n"
                                     "    border-radius: 50px;\n"
                                     "}")
        self.groupBox1.setTitle("")
        self.groupBox1.setObjectName("groupBox1")
        self.Button_predict = QtWidgets.QPushButton(self.groupBox1)
        self.Button_predict.setGeometry(QtCore.QRect(520, 240, 141, 51))
        font = QtGui.QFont()
        font.setFamily("MV Boli")
        font.setPointSize(10)
        self.Button_predict.setFont(font)
        self.Button_predict.setStyleSheet("QPushButton#Button_predict:hover:!pressed {\n"
                                          "background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:0, y2:0, "
                                          "stop:0.306818 rgba(63, 0, 64, 255), stop:0.886364 rgba(0, 27, 68, 255));\n "
                                          "}\n"
                                          "QPushButton#Button_predict {\n"
                                          "background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:0, y2:0, "
                                          "stop:0.306818 rgba(143, 0, 146, 255), stop:0.886364 rgba(0, 100, 245, "
                                          "255));\n "
                                          "    border: none;\n"
                                          "   color: white;\n"
                                          "   border-radius: 25px;\n"
                                          "}")
        self.Button_predict.setObjectName("Button_predict")
        self.Button_predict.clicked.connect(self.predict)

        self.label_input = QtWidgets.QLabel(self.groupBox1)
        self.label_input.setGeometry(QtCore.QRect(20, 0, 141, 51))
        self.label_input.setFont(font)
        self.label_input.setStyleSheet("QLabel#label_input {\n"
                                       "background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:0, y2:0, "
                                       "stop:0.306818 rgba(143, 0, 146, 255), stop:0.886364 rgba(0, 100, 245, 255));\n "
                                       "   border: none; \n"
                                       "   color: white;\n"
                                       "   border-radius: 25px;\n"
                                       "}")

        self.label_input.setObjectName("label_input")
        self.textEdit_input = QtWidgets.QTextEdit(self.groupBox1)
        self.textEdit_input.setGeometry(QtCore.QRect(30, 60, 661, 161))
        self.textEdit_input.setStyleSheet("QTextEdit#textEdit_input{\n"
                                          "    border: none; \n"
                                          "       color: white;\n"
                                          "       border-radius: 25px;\n"
                                          "}")
        self.textEdit_input.setObjectName("textEdit_input")

        self.groupBox2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox2.setGeometry(QtCore.QRect(10, 380, 351, 211))
        self.groupBox2.setStyleSheet("QGroupBox#groupBox2 {\n"
                                     "    background-color: #242526;\n"
                                     "    border: none;\n"
                                     "    border-radius: 30px;\n"
                                     "}")
        self.groupBox2.setTitle("")
        self.groupBox2.setObjectName("groupBox2")

        self.label_result = QtWidgets.QLabel(self.groupBox2)
        self.label_result.setGeometry(QtCore.QRect(10, 0, 111, 41))
        self.label_result.setFont(font)
        self.label_result.setStyleSheet("QLabel#label_result {\n"
                                        "background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:0, y2:0, "
                                        "stop:0.306818 rgba(143, 0, 146, 255), stop:0.886364 rgba(0, 100, 245, "
                                        "255));\n "
                                        "   border: none; \n"
                                        "   color: white;\n"
                                        "   border-radius: 15px;\n"
                                        "}")
        self.label_result.setObjectName("label_result")

        self.label_result1 = QtWidgets.QLabel(self.groupBox2)
        self.label_result1.setGeometry(QtCore.QRect(20, 70, 301, 61))
        self.label_result1.setFont(font)
        self.label_result1.setStyleSheet("QLabel#label_result1 {\n"
                                         "   border: none; \n"
                                         "   color: white;\n"
                                         "   border-radius: 15px;\n"
                                         "}")
        self.label_result1.setObjectName("label_result1")

        self.groupBox3 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox3.setGeometry(QtCore.QRect(10, 10, 711, 41))
        font.setPointSize(14)
        self.groupBox3.setFont(font)
        self.groupBox3.setStyleSheet("QGroupBox#groupBox3 {\n"
                                     "    background-color: #242526;\n"
                                     "    border: none;\n"
                                     "    border-radius: 10px;\n"
                                     "    color: white;\n"
                                     "}")
        self.groupBox3.setObjectName("groupBox3")

        self.groupBox4 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox4.setGeometry(QtCore.QRect(370, 380, 351, 211))
        font = QtGui.QFont()
        font.setFamily("MV Boli")
        font.setPointSize(10)
        self.groupBox4.setFont(font)
        self.groupBox4.setStyleSheet("QGroupBox#groupBox4 {\n"
                                     "    background-color: #242526;\n"
                                     "    border: none;\n"
                                     "    border-radius: 30px;\n"
                                     "}")
        self.groupBox4.setTitle("")
        self.groupBox4.setObjectName("groupBox4")

        self.label_member = QtWidgets.QLabel(self.groupBox4)
        self.label_member.setGeometry(QtCore.QRect(10, 0, 111, 41))
        font = QtGui.QFont()
        font.setFamily("MV Boli")
        font.setPointSize(10)
        self.label_member.setFont(font)
        self.label_member.setStyleSheet("QLabel#label_member {\n"
                                        "background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:0, y2:0, "
                                        "stop:0.306818 rgba(143, 0, 146, 255), stop:0.886364 rgba(0, 100, 245, "
                                        "255));\n "
                                        "   border: none; \n"
                                        "   color: white;\n"
                                        "   border-radius: 15px;\n"
                                        "}")
        self.label_member.setObjectName("label_member")

        self.label_tai = QtWidgets.QLabel(self.groupBox4)
        self.label_tai.setGeometry(QtCore.QRect(10, 50, 161, 31))
        font = QtGui.QFont()
        font.setFamily("MV Boli")
        font.setPointSize(9)
        self.label_tai.setFont(font)
        self.label_tai.setStyleSheet("QLabel#label_tai {\n"
                                     "   border: none; \n"
                                     "   color: white;\n"
                                     "   border-radius: 15px;\n"
                                     "}")
        self.label_tai.setObjectName("label_tai")

        self.label_vi = QtWidgets.QLabel(self.groupBox4)
        self.label_vi.setGeometry(QtCore.QRect(10, 90, 161, 31))
        font = QtGui.QFont()
        font.setFamily("MV Boli")
        font.setPointSize(9)
        self.label_vi.setFont(font)
        self.label_vi.setStyleSheet("QLabel#label_vi {\n"
                                    "   border: none; \n"
                                    "   color: white;\n"
                                    "   border-radius: 15px;\n"
                                    "}")
        self.label_vi.setObjectName("label_vi")

        self.label_phung = QtWidgets.QLabel(self.groupBox4)
        self.label_phung.setGeometry(QtCore.QRect(10, 130, 161, 31))
        font = QtGui.QFont()
        font.setFamily("MV Boli")
        font.setPointSize(9)
        self.label_phung.setFont(font)
        self.label_phung.setStyleSheet("QLabel#label_phung {\n"
                                       "   border: none; \n"
                                       "   color: white;\n"
                                       "   border-radius: 15px;\n"
                                       "}")
        self.label_phung.setObjectName("label_phung")

        self.label_thin = QtWidgets.QLabel(self.groupBox4)
        self.label_thin.setGeometry(QtCore.QRect(180, 50, 161, 31))
        font = QtGui.QFont()
        font.setFamily("MV Boli")
        font.setPointSize(9)
        self.label_thin.setFont(font)
        self.label_thin.setStyleSheet("QLabel#label_thin {\n"
                                      "   border: none; \n"
                                      "   color: white;\n"
                                      "   border-radius: 15px;\n"
                                      "}")
        self.label_thin.setObjectName("label_thin")

        self.label_phi = QtWidgets.QLabel(self.groupBox4)
        self.label_phi.setGeometry(QtCore.QRect(180, 90, 161, 31))
        font = QtGui.QFont()
        font.setFamily("MV Boli")
        font.setPointSize(9)
        self.label_phi.setFont(font)
        self.label_phi.setStyleSheet("QLabel#label_phi {\n"
                                     "   border: none; \n"
                                     "   color: white;\n"
                                     "   border-radius: 15px;\n"
                                     "}")
        self.label_phi.setObjectName("label_phi")

        self.label_tho = QtWidgets.QLabel(self.groupBox4)
        self.label_tho.setGeometry(QtCore.QRect(180, 130, 161, 31))
        font = QtGui.QFont()
        font.setFamily("MV Boli")
        font.setPointSize(9)
        self.label_tho.setFont(font)
        self.label_tho.setStyleSheet("QLabel#label_tho {\n"
                                     "   border: none; \n"
                                     "   color: white;\n"
                                     "   border-radius: 15px;\n"
                                     "}")
        self.label_tho.setObjectName("label_tho")

        self.label_thanh = QtWidgets.QLabel(self.groupBox4)
        self.label_thanh.setGeometry(QtCore.QRect(10, 170, 161, 31))
        font = QtGui.QFont()
        font.setFamily("MV Boli")
        font.setPointSize(9)
        self.label_thanh.setFont(font)
        self.label_thanh.setStyleSheet("QLabel#label_thanh {\n"
                                       "   border: none; \n"
                                       "   color: white;\n"
                                       "   border-radius: 15px;\n"
                                       "}")
        self.label_thanh.setObjectName("label_thanh")
        MainWindow.setCentralWidget(self.centralwidget)

        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.Button_predict.setText(_translate("MainWindow", "Predict"))
        self.label_input.setText(_translate("MainWindow", "      Input"))
        self.textEdit_input.setHtml(_translate("MainWindow",
                                               "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" "
                                               "\"http://www.w3.org/TR/REC-html40/strict.dtd\">\n "
                                               "<html><head><meta name=\"qrichtext\" content=\"1\" /><style "
                                               "type=\"text/css\">\n "
                                               "p, li { white-space: pre-wrap; }\n"
                                               "</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; "
                                               "font-size:7.8pt; font-weight:400; font-style:normal;\">\n "
                                               "<p style=\"-qt-paragraph-type:empty; margin-top:0px; "
                                               "margin-bottom:0px; margin-left:0px; margin-right:0px; "
                                               "-qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))

        self.label_result.setText(_translate("MainWindow", "   Result"))
        self.label_result1.setText(_translate("MainWindow", "The Result is: "))
        self.groupBox3.setTitle(_translate("MainWindow", "              Group 6: Naive Bayes Classifier"))
        self.label_member.setText(_translate("MainWindow", "   Member:"))
        self.label_tai.setText(_translate("MainWindow", "   Nguyễn Đức Tài"))
        self.label_vi.setText(_translate("MainWindow", "   Hồ Lê Hoài Vĩ"))
        self.label_phung.setText(_translate("MainWindow", " Nguyễn Minh Phụng"))
        self.label_thin.setText(_translate("MainWindow", "   Phan Văn Thìn"))
        self.label_phi.setText(_translate("MainWindow", "   Nguyễn Tài Phi"))
        self.label_tho.setText(_translate("MainWindow", "   Nguyễn Văn Thơ"))
        self.label_thanh.setText(_translate("MainWindow", "  Trần Tuấn Thành"))

    def remove_stopwords(self, text):
        stop_words = stopwords.words("english")
        ps = PorterStemmer()
        text = re.sub('^a-zA-Z', ' ', text)
        text = text.split()
        text = [ps.stem(word) for word in text if word not in stop_words]
        text = ' '.join(text).replace('  ', ' ')
        return text

    def predict(self):
        text = self.textEdit_input.toPlainText()
        text = self.remove_stopwords(text)
        text = text.split(" ")
        X = [
            ['00', '000', '10', '100', '1000', '11', '12', '13', '14', '15', '16', '17', '18', '19', '19â', '1st', '20',
             '200', '2008', '2019', '2020', '21', '22', '23', '24', '25', '26', '27', '28', '2m', '2nd', '30', '300',
             '31', '35', '3m', '3rd', '40', '400', '45', '48', '50', '500', '55', '60', '600', '65', '70', '75', '80',
             '800', '90', '99', 'abc', 'abil', 'abl', 'about', 'absolut', 'abus', 'acceler', 'accept', 'access',
             'accord', 'account', 'accus', 'across', 'act', 'action', 'activ', 'actual', 'ad', 'adapt', 'add', 'addit',
             'address', 'adjust', 'administr', 'adult', 'advantag', 'advertis', 'advic', 'advis', 'advoc', 'affair',
             'affect', 'afford', 'afraid', 'africa', 'african', 'after', 'afternoon', 'ag', 'again', 'age', 'agenc',
             'ago', 'agre', 'agricultur', 'ahead', 'ai', 'aid', 'aim', 'air', 'airlin', 'aisl', 'al', 'alberta',
             'alcohol', 'aldi', 'aldiuk', 'alert', 'all', 'allegedli', 'allow', 'almost', 'alon', 'along', 'alreadi',
             'also', 'altern', 'although', 'alway', 'am', 'amaz', 'amazon', 'america', 'american', 'amid', 'amidst',
             'among', 'amount', 'amp', 'an', 'analysi', 'analyst', 'and', 'angel', 'ani', 'anim', 'announc', 'anoth',
             'answer', 'anti', 'antibacteri', 'anticip', 'anxieti', 'anxiou', 'anyon', 'anyth', 'anything', 'anyway',
             'anywher', 'apart', 'apocalyps', 'app', 'appar', 'appeal', 'appear', 'appl', 'appli', 'applic', 'appreci',
             'approach', 'approv', 'april', 'arabia', 'are', 'area', 'arenâ', 'argu', 'arm', 'armi', 'around', 'arrest',
             'arriv', 'art', 'articl', 'article', 'artist', 'as', 'asda', 'asham', 'asia', 'asian', 'ask', 'ass',
             'assess', 'asset', 'assist', 'associ', 'assum', 'assur', 'at', 'atm', 'attack', 'attempt', 'attend',
             'attent', 'attitud', 'attorney', 'auspol', 'australia', 'australian', 'author', 'auto', 'avail',
             'available', 'averag', 'avoid', 'awar', 'away', 'babi', 'back', 'bacteria', 'bad', 'bag', 'bailout',
             'bake', 'ban', 'bank', 'banks', 'bar', 'bare', 'barrel', 'bas', 'base', 'basic', 'basket', 'bastard',
             'bathroom', 'battl', 'bay', 'bbc', 'bbcnew', 'bc', 'be', 'beach', 'bean', 'beat', 'beauti', 'becaus',
             'becom', 'beef', 'been', 'beer', 'befor', 'before', 'began', 'begin', 'begun', 'behav', 'behavior',
             'behaviour', 'behind', 'bekind', 'believ', 'below', 'benefit', 'besid', 'best', 'bet', 'better', 'beverag',
             'bewar', 'beyond', 'bid', 'bidet', 'big', 'biggest', 'bill', 'billion', 'bin', 'bit', 'bitch', 'bitcoin',
             'black', 'blame', 'bleach', 'bless', 'block', 'blog', 'blood', 'bloodi', 'blow', 'blue', 'board', 'bodi',
             'bog', 'bond', 'bonu', 'book', 'boom', 'boost', 'border', 'bore', 'bori', 'borisjohnson', 'boss', 'bottl',
             'bottom', 'bought', 'box', 'boy', 'brad', 'brand', 'brave', 'bread', 'break', 'breaking', 'breath',
             'brexit', 'brief', 'brilliant', 'bring', 'britain', 'british', 'broke', 'brother', 'brought', 'bu',
             'budget', 'build', 'bulk', 'bunch', 'bureau', 'busi', 'business', 'businesses', 'but', 'buy', 'buyer',
             'buyers', 'buying', 'by', 'ca', 'cake', 'calcul', 'california', 'call', 'calm', 'came', 'campaign', 'can',
             'canada', 'canadian', 'cancel', 'cannabi', 'cannot', 'cant', 'canâ', 'cap', 'capac', 'capit', 'car',
             'card', 'care', 'carri', 'carrier', 'cart', 'case', 'cases', 'cash', 'cashier', 'cat', 'catch', 'categori',
             'cattl', 'caught', 'caus', 'cbc', 'cbd', 'cc', 'cdc', 'cdcgov', 'celebr', 'cent', 'center', 'centr',
             'central', 'ceo', 'certain', 'certainli', 'chain', 'chains', 'challeng', 'chanc', 'chang', 'change',
             'channel', 'chao', 'charg', 'chariti', 'chart', 'chat', 'cheap', 'cheaper', 'check', 'checkout', 'chemic',
             'chemist', 'chicago', 'chicken', 'chief', 'child', 'children', 'chill', 'china', 'chinaviru', 'chines',
             'chineseviru', 'choic', 'choos', 'church', 'citi', 'citizen', 'city', 'civil', 'claim', 'class',
             'classifi', 'clean', 'cleaner', 'clear', 'clearli', 'clerk', 'clerks', 'click', 'client', 'climat',
             'clock', 'close', 'closed', 'closer', 'closur', 'closures', 'cloth', 'club', 'cnn', 'co', 'code', 'coffe',
             'cold', 'cole', 'collaps', 'colleagu', 'collect', 'colleg', 'com', 'combat', 'combin', 'come', 'comedi',
             'comfort', 'comic', 'comment', 'commerc', 'commerci', 'commiss', 'commission', 'commit', 'commod',
             'common', 'commun', 'community', 'compani', 'companies', 'company', 'compar', 'compet', 'competit',
             'complain', 'complaint', 'complet', 'concern', 'condit', 'conduct', 'confer', 'confid', 'confirm',
             'confus', 'congress', 'connect', 'consid', 'consider', 'consum', 'consumer', 'consumerbehavior',
             'consumers', 'consumpt', 'contact', 'contain', 'contamin', 'content', 'contest', 'continu', 'contract',
             'contribut', 'control', 'conveni', 'convers', 'cook', 'cool', 'cooper', 'coordin', 'cope', 'corn',
             'corner', 'corona', 'coronacrisi', 'coronacrisisuk', 'coronaoutbreak', 'coronapocalyps', 'coronapocolyps',
             'coronaviru', 'coronavirus', 'coronavirusau', 'coronaviruschalleng', 'coronavirusindia',
             'coronaviruslockdown', 'coronavirusoutbreak', 'coronaviruspandem', 'coronavirusuk', 'coronavirusupd',
             'coronavirususa', 'coronavirusâ', 'corpor', 'correct', 'cost', 'costco', 'cough', 'could', 'couldnâ',
             'council', 'count', 'counter', 'counti', 'countri', 'countries', 'country', 'coupl', 'cours', 'cov',
             'cover', 'coverag', 'covid', 'covid19', 'covid19au', 'covid19out', 'covid19pandem', 'covid19u',
             'covid19uk', 'covid2019', 'covid_19', 'covid__19', 'covididiot', 'covidiot', 'crash', 'crazi', 'crazy',
             'cream', 'creat', 'creativ', 'credit', 'cri', 'crime', 'crimin', 'crisi', 'crisis', 'critic', 'crop',
             'cross', 'crowd', 'crucial', 'crude', 'crush', 'crypto', 'curb', 'curbsid', 'cure', 'curfew', 'currenc',
             'current', 'curv', 'custom', 'customers', 'cut', 'dad', 'daili', 'daily', 'dairi', 'damag', 'damn',
             'danger', 'dark', 'data', 'date', 'daughter', 'day', 'days', 'dc', 'de', 'dead', 'deadli', 'deal', 'dear',
             'death', 'debt', 'decid', 'decis', 'declar', 'declin', 'decreas', 'dedic', 'deep', 'definit', 'delay',
             'deliv', 'deliveri', 'deliveries', 'delivery', 'demand', 'democrat', 'depart', 'depend', 'depress',
             'deserv', 'design', 'desper', 'despit', 'destroy', 'detail', 'develop', 'devic', 'diagnos', 'did', 'didnâ',
             'die', 'diesel', 'differ', 'difficult', 'digit', 'dine', 'dinner', 'dip', 'direct', 'directli', 'director',
             'disabl', 'disappoint', 'disast', 'discount', 'discov', 'discuss', 'diseas', 'disgust', 'disinfect',
             'dispos', 'disrupt', 'distanc', 'distance', 'distancing', 'distilleri', 'distribut', 'distributor',
             'district', 'diy', 'dm', 'do', 'doctor', 'doctors', 'doe', 'doesnâ', 'dog', 'doing', 'dollar', 'domest',
             'don', 'donat', 'done', 'dont', 'donâ', 'door', 'doubl', 'doubt', 'down', 'download', 'downturn', 'dozen',
             'dr', 'dramat', 'drastic', 'dream', 'dri', 'drink', 'drive', 'driven', 'driver', 'drivers', 'drone',
             'drop', 'drug', 'dubai', 'due', 'dump', 'dure', 'duti', 'earli', 'earlier', 'earn', 'earth', 'eas', 'easi',
             'easier', 'easili', 'east', 'easter', 'eat', 'ebay', 'ecommerc', 'econom', 'economi', 'economist',
             'economy', 'edit', 'educ', 'effect', 'effort', 'egg', 'eggs', 'either', 'elderli', 'elderly', 'elect',
             'electr', 'electron', 'els', 'else', 'email', 'emerg', 'emergency', 'emot', 'employ', 'employe',
             'employees', 'empti', 'empty', 'enabl', 'encourag', 'end', 'energi', 'enforc', 'engag', 'enjoy', 'enough',
             'ensur', 'enter', 'entertain', 'entir', 'environ', 'environment', 'epidem', 'epidemic', 'episod', 'equip',
             'equiti', 'era', 'especi', 'essenti', 'essential', 'essentials', 'essentialwork', 'estat', 'estim', 'et',
             'etc', 'ethanol', 'eu', 'europ', 'european', 'even', 'event', 'ever', 'everi', 'everybodi', 'everyday',
             'everyon', 'everyone', 'everyth', 'everything', 'everywher', 'everywhere', 'evid', 'evolv', 'exactli',
             'exampl', 'excel', 'except', 'excess', 'exchang', 'excit', 'exclus', 'excus', 'execut', 'exercis', 'exist',
             'exorbit', 'expand', 'expect', 'expens', 'experi', 'experienc', 'expert', 'explain', 'exploit', 'explor',
             'export', 'expos', 'exposur', 'express', 'extend', 'extortion', 'extra', 'extrem', 'eye', 'face',
             'facebook', 'facemask', 'facil', 'fact', 'factori', 'fail', 'fair', 'faith', 'fake', 'fall', 'fallen',
             'fallout', 'fals', 'famili', 'families', 'family', 'far', 'farm', 'farmer', 'fashion', 'fast', 'faster',
             'favorit', 'fda', 'fear', 'featur', 'februari', 'fed', 'feder', 'fee', 'feed', 'feel', 'feet', 'fell',
             'fellow', 'felt', 'fewer', 'field', 'fight', 'fightcovid19', 'figur', 'file', 'fill', 'film', 'final',
             'financ', 'financi', 'find', 'fine', 'finish', 'fire', 'firm', 'first', 'fiscal', 'fish', 'fit', 'five',
             'fix', 'flat', 'flatten', 'flattenthecurv', 'fli', 'flight', 'flood', 'floor', 'florida', 'flour', 'flow',
             'flu', 'fmcg', 'focu', 'focus', 'folk', 'folks', 'follow', 'food', 'foodbank', 'foot', 'for', 'forc',
             'forecast', 'foreign', 'forev', 'forget', 'form', 'forward', 'found', 'founder', 'four', 'foxnew', 'franc',
             'fraud', 'fraudul', 'freak', 'free', 'freez', 'freezer', 'french', 'frequent', 'fresh', 'friday', 'fridg',
             'friend', 'friendli', 'friends', 'from', 'front', 'frontlin', 'frozen', 'fruit', 'ft', 'ftc', 'fuck',
             'fuel', 'full', 'fulli', 'fun', 'fund', 'funni', 'futur', 'future', 'ga', 'gain', 'gallon', 'game', 'gap',
             'garbag', 'garden', 'gasolin', 'gather', 'gave', 'gdp', 'gear', 'gel', 'gener', 'germ', 'german',
             'germani', 'get', 'ghana', 'giant', 'gift', 'girl', 'give', 'given', 'glad', 'global', 'globe', 'glove',
             'gloves', 'go', 'god', 'goe', 'going', 'gold', 'gone', 'gonna', 'good', 'goods', 'googl', 'gop', 'got',
             'gotta', 'gotten', 'goug', 'gouging', 'gov', 'govern', 'government', 'governor', 'govt', 'grab', 'grant',
             'grate', 'gratitud', 'great', 'greater', 'greed', 'greedi', 'green', 'grocer', 'groceri', 'groceries',
             'grocery', 'groceryshop', 'grocerystor', 'ground', 'group', 'grow', 'growth', 'gt', 'guarante', 'guard',
             'guardian', 'guess', 'guid', 'guidanc', 'guidelin', 'gun', 'guy', 'guys', 'gym', 'ha', 'habit', 'had',
             'hair', 'half', 'halt', 'hand', 'handl', 'hands', 'handsanit', 'handwash', 'hang', 'happen', 'happi',
             'hard', 'harder', 'hardest', 'hardship', 'harm', 'harvest', 'hate', 'have', 'havenâ', 'hazard', 'he',
             'head', 'health', 'healthcar', 'healthi', 'healthy', 'hear', 'heard', 'heart', 'heb', 'held', 'hell',
             'hello', 'help', 'her', 'here', 'hereâ', 'hero', 'heroes', 'hey', 'heâ', 'hi', 'high', 'higher', 'highest',
             'highli', 'highlight', 'hike', 'him', 'hire', 'histor', 'histori', 'hit', 'hoard', 'hoarder', 'hoarding',
             'hoax', 'hold', 'holiday', 'hom', 'home', 'homeless', 'homemad', 'hope', 'hospit', 'hospital', 'hospitals',
             'host', 'hot', 'hotel', 'hotlin', 'hour', 'hours', 'hous', 'house', 'household', 'houston', 'how', 'howev',
             'however', 'hr', 'https', 'hub', 'huge', 'human', 'humor', 'hundr', 'hunger', 'hungri', 'hunt', 'hurt',
             'husband', 'hygien', 'hypermarket', 'ice', 'icymi', 'idea', 'identifi', 'idiot', 'if', 'ignor', 'ill',
             'illeg', 'im', 'imag', 'imagin', 'immedi', 'immun', 'impact', 'implement', 'implic', 'import', 'impos',
             'imposs', 'improv', 'in', 'includ', 'incom', 'income', 'increas', 'increasingli', 'incred', 'independ',
             'index', 'india', 'indiafightscorona', 'indian', 'indic', 'individu', 'indoor', 'induc', 'industri',
             'industry', 'infect', 'inflat', 'influenc', 'info', 'inform', 'information', 'ingredi', 'initi', 'innov',
             'insan', 'insecur', 'insid', 'insight', 'inspir', 'instal', 'instead', 'institut', 'instruct', 'insur',
             'interact', 'interest', 'intern', 'internet', 'interview', 'introduc', 'inventori', 'invest', 'investig',
             'investor', 'involv', 'iran', 'ireland', 'irrespons', 'is', 'isnâ', 'isol', 'isolation', 'issu', 'issues',
             'it', 'itali', 'italian', 'italy', 'item', 'items', 'itâ', 'iâ', 'jack', 'januari', 'japan', 'jersey',
             'job', 'jobs', 'joe', 'johnson', 'join', 'joke', 'journal', 'jump', 'just', 'keep', 'kenya', 'kept', 'key',
             'kick', 'kid', 'kids', 'kill', 'kind', 'kindli', 'king', 'kit', 'kitchen', 'knew', 'know', 'known',
             'korea', 'kroger', 'la', 'lab', 'label', 'labor', 'labour', 'lack', 'ladi', 'lago', 'laid', 'land', 'larg',
             'largest', 'last', 'late', 'later', 'latest', 'laugh', 'launch', 'laundri', 'law', 'lead', 'leader',
             'leadership', 'learn', 'least', 'leav', 'led', 'left', 'legal', 'less', 'lesson', 'let', 'letter', 'letâ',
             'level', 'licens', 'lick', 'lidlgb', 'lie', 'life', 'lift', 'light', 'like', 'limit', 'line', 'lines',
             'link', 'liquid', 'liquor', 'list', 'listen', 'liter', 'litr', 'littl', 'live', 'lives', 'll', 'lo',
             'load', 'loan', 'local', 'locat', 'lock', 'lockdown', 'lockdownuk', 'logist', 'lol', 'london', 'long',
             'longer', 'loo', 'look', 'lose', 'loss', 'lost', 'lot', 'love', 'low', 'lower', 'lowest', 'lt', 'luck',
             'lucki', 'lunch', 'luxuri', 'lysol', 'machin', 'mad', 'made', 'maga', 'mail', 'main', 'maintain', 'major',
             'make', 'maker', 'malaysia', 'mall', 'man', 'manag', 'manchest', 'mani', 'manufactur', 'mar', 'march',
             'mark', 'market', 'marketplac', 'markets', 'mask', 'masks', 'mass', 'massiv', 'materi', 'matter', 'may',
             'mayb', 'mayor', 'mckinsey', 'me', 'meal', 'mean', 'meant', 'meanwhil', 'measur', 'measures', 'meat',
             'med', 'media', 'medic', 'medicin', 'meet', 'member', 'meme', 'men', 'mental', 'mention', 'merchant',
             'mess', 'messag', 'metal', 'meter', 'metr', 'metro', 'mi', 'michigan', 'mid', 'middl', 'midst', 'might',
             'mile', 'militari', 'milk', 'million', 'min', 'mind', 'mine', 'minim', 'minimum', 'minist', 'ministri',
             'minut', 'miss', 'mission', 'mitig', 'mix', 'mobil', 'mode', 'model', 'mom', 'moment', 'monday', 'money',
             'monitor', 'month', 'monthli', 'months', 'more', 'morn', 'morning', 'moron', 'morrison', 'mortgag', 'most',
             'mostli', 'mother', 'mouth', 'move', 'movement', 'movi', 'mr', 'mrx', 'much', 'multipl', 'mum', 'mumbai',
             'music', 'must', 'my', 'n95', 'name', 'narendramodi', 'nation', 'nationwid', 'natur', 'navig', 'near',
             'nearli', 'necess', 'necessari', 'need', 'needed', 'needs', 'neg', 'neighbor', 'neighborhood', 'neighbour',
             'netflix', 'network', 'never', 'new', 'news', 'next', 'nh', 'nhs', 'nice', 'nigeria', 'nigerian', 'night',
             'nj', 'no', 'nobodi', 'nofood', 'non', 'none', 'normal', 'north', 'northern', 'nose', 'not', 'note',
             'noth', 'nothing', 'notic', 'notice', 'novel', 'now', 'number', 'nurs', 'nurses', 'ny', 'nyc',
             'nygovcuomo', 'nytim', 'nz', 'observ', 'ocado', 'of', 'off', 'offer', 'offic', 'office', 'offici', 'often',
             'oh', 'oil', 'oilpric', 'ok', 'okay', 'old', 'older', 'on', 'onc', 'one', 'ongo', 'onli', 'onlin',
             'online', 'onlineshop', 'only', 'ontario', 'oott', 'opec', 'open', 'oper', 'opinion', 'opportun',
             'opposit', 'option', 'or', 'order', 'orders', 'organ', 'organis', 'origin', 'other', 'others', 'otherwis',
             'our', 'out', 'outbreak', 'outlet', 'outlook', 'output', 'outsid', 'outside', 'over', 'overnight',
             'overwhelm', 'own', 'owner', 'oz', 'pa', 'pack', 'packag', 'packet', 'page', 'paid', 'paisley', 'pakistan',
             'pandem', 'pandemic', 'panic', 'panicbuy', 'panicbuyinguk', 'panick', 'panicshop', 'pantri', 'paper',
             'paracetamol', 'parcel', 'parent', 'park', 'part', 'parti', 'particularli', 'partner', 'pass', 'past',
             'pasta', 'patient', 'pattern', 'pay', 'paycheck', 'payment', 'peak', 'pennsylvania', 'pension', 'peopl',
             'people', 'peopleâ', 'per', 'percent', 'perfect', 'perform', 'perhap', 'period', 'perish', 'perman',
             'person', 'personnel', 'perspect', 'pet', 'petit', 'petrol', 'petroleum', 'pharmaceut', 'pharmaci',
             'pharmacist', 'pharmacy', 'phase', 'phish', 'phone', 'photo', 'physic', 'pic', 'pick', 'pickup', 'pictur',
             'piec', 'piersmorgan', 'pile', 'pivot', 'pizza', 'pl', 'place', 'plan', 'planet', 'plant', 'plastic',
             'platform', 'play', 'player', 'pleas', 'please', 'pledg', 'plenti', 'plu', 'plummet', 'plung', 'plz', 'pm',
             'pmoindia', 'pocket', 'podcast', 'point', 'polic', 'police', 'polici', 'polit', 'poll', 'poor', 'pop',
             'popul', 'popular', 'pork', 'pose', 'posit', 'possibl', 'possible', 'post', 'postal', 'postpon', 'potato',
             'potenti', 'potu', 'pound', 'power', 'ppe', 'ppl', 'practic', 'prais', 'pray', 'pre', 'precaut', 'predict',
             'prefer', 'prepar', 'prepared', 'prepper', 'prescript', 'present', 'presid', 'press', 'pressur', 'pretti',
             'prevent', 'previou', 'previous', 'price', 'pricegoug', 'prices', 'prime', 'print', 'prior', 'priorit',
             'prioriti', 'privaci', 'privat', 'pro', 'probabl', 'problem', 'process', 'produc', 'product', 'production',
             'products', 'profession', 'professor', 'profit', 'program', 'project', 'promis', 'promot', 'prompt',
             'proper', 'properti', 'propos', 'protect', 'proud', 'prove', 'provid', 'psa', 'psycholog', 'pub', 'public',
             'publish', 'publix', 'pull', 'pump', 'purchas', 'purpos', 'push', 'put', 'putin', 'puzzl', 'qualiti',
             'quantiti', 'quarantin', 'quarantine', 'quarantinelif', 'quaratinelif', 'quarentinelif', 'question',
             'queu', 'queue', 'quick', 'quickli', 'quit', 'quot', 'race', 'rais', 'ralli', 'ramp', 'ran', 'rang',
             'rapid', 'rapidli', 'rate', 'rather', 'ration', 'raw', 're', 'reach', 'react', 'reaction', 'read', 'readi',
             'real', 'realdonaldtrump', 'realest', 'realis', 'realiti', 'realiz', 'realli', 'reason', 'reassur',
             'receiv', 'recent', 'recess', 'recession', 'recip', 'recommend', 'record', 'recov', 'recoveri', 'recruit',
             'red', 'reduc', 'reduct', 'reflect', 'refund', 'refus', 'regard', 'region', 'regist', 'regul', 'regular',
             'regularli', 'rel', 'relat', 'relax', 'releas', 'reli', 'relief', 'remain', 'rememb', 'remind', 'remot',
             'remov', 'rent', 'rental', 'reopen', 'report', 'repres', 'request', 'requir', 'research', 'reserv',
             'resid', 'resili', 'resourc', 'respect', 'respond', 'responders', 'respons', 'response', 'rest', 'restaur',
             'restaurants', 'restock', 'restrict', 'restrictions', 'result', 'retail', 'return', 'retweet', 'reusabl',
             'reveal', 'revenu', 'review', 'rice', 'rich', 'ride', 'ridicul', 'ridiculous', 'right', 'rip', 'rise',
             'risk', 'rn', 'road', 'rob', 'rock', 'role', 'roll', 'rolls', 'room', 'rose', 'round', 'rout', 'rs', 'rt',
             'rub', 'rule', 'run', 'rural', 'rush', 'russia', 'russian', 'sa', 'sad', 'safe', 'safer', 'safeti',
             'safety', 'safeway', 'said', 'sainsburi', 'salari', 'sale', 'sales', 'same', 'san', 'sanit', 'sanitis',
             'sanitizer', 'sanitizers', 'sarscov2', 'saturday', 'saudi', 'saudiarabia', 'save', 'saw', 'say', 'says',
             'scale', 'scam', 'scammer', 'scams', 'scarc', 'scare', 'scari', 'scene', 'schedul', 'scheme', 'school',
             'scienc', 'scientist', 'score', 'scrambl', 'screen', 'search', 'season', 'second', 'section', 'sector',
             'secur', 'see', 'seed', 'seek', 'seem', 'seen', 'select', 'self', 'selfish', 'selfisol', 'sell', 'seller',
             'senat', 'send', 'senior', 'sens', 'sensibl', 'sent', 'sentiment', 'separ', 'seri', 'seriou', 'serious',
             'seriously', 'serv', 'servic', 'service', 'services', 'session', 'set', 'sever', 'sh', 'shall', 'shame',
             'shape', 'share', 'sharp', 'sharpli', 'she', 'shelf', 'shelter', 'shelterinplac', 'shelv', 'shelves',
             'shield', 'shift', 'ship', 'shipment', 'shirt', 'shit', 'shock', 'shoot', 'shop', 'shoploc', 'shopper',
             'shoppers', 'shopping', 'shops', 'short', 'shortag', 'shortage', 'shortages', 'shot', 'should', 'shout',
             'show', 'shown', 'shut', 'shutdown', 'sick', 'side', 'sign', 'signific', 'significantli', 'silver',
             'similar', 'simpl', 'simpli', 'sinc', 'singl', 'sir', 'sister', 'sit', 'site', 'situat', 'situation',
             'six', 'size', 'sky', 'skynew', 'skyrocket', 'slash', 'sleep', 'slot', 'slow', 'slowdown', 'slump',
             'small', 'smaller', 'smart', 'smile', 'snap', 'sneez', 'so', 'soap', 'soar', 'social', 'socialdist',
             'socialdistanac', 'socialdistanc', 'socialdistancing', 'societi', 'sold', 'solut', 'some', 'someon',
             'someth', 'sometim', 'son', 'soon', 'sorri', 'sort', 'sound', 'soup', 'sourc', 'south', 'space', 'spain',
             'spare', 'spark', 'speak', 'special', 'specif', 'speed', 'spend', 'spending', 'spent', 'spike', 'spirit',
             'spit', 'spoke', 'sport', 'spot', 'spray', 'spread', 'spring', 'ssupnow', 'st', 'stabil', 'stabl', 'staff',
             'stage', 'stand', 'standard', 'stapl', 'star', 'start', 'startup', 'starv', 'state', 'statement', 'states',
             'station', 'stay', 'stayathom', 'stayhom', 'stayhomechalleng', 'stayhomesavel', 'stayhomestaysaf',
             'staysaf', 'staysafestayhom', 'steal', 'steel', 'step', 'stick', 'still', 'stimulu', 'stock', 'stocked',
             'stockmarket', 'stockpil', 'stockup', 'stop', 'stophoard', 'stoppanicbuy', 'stopstockpil', 'stopthespread',
             'stor', 'store', 'stores', 'stori', 'storm', 'story', 'straight', 'strain', 'strang', 'strategi', 'stream',
             'street', 'stress', 'strict', 'strike', 'strip', 'strong', 'struggl', 'stuck', 'student', 'studi', 'stuff',
             'stupid', 'success', 'suck', 'sudden', 'suddenli', 'suffer', 'sugar', 'suggest', 'suit', 'summer', 'sun',
             'sunday', 'super', 'supermarket', 'supermarkets', 'suppli', 'supplier', 'supplies', 'supply',
             'supplychain', 'support', 'suppos', 'sure', 'surfac', 'surg', 'surgic', 'surplu', 'surpris', 'surround',
             'survey', 'surviv', 'suspect', 'suspend', 'sustain', 'sweep', 'switch', 'sydney', 'symptom', 'symptoms',
             'system', 'tabl', 'tackl', 'take', 'takeaway', 'taken', 'takeout', 'talk', 'tank', 'target', 'task',
             'tast', 'tax', 'tea', 'teacher', 'team', 'tear', 'tech', 'technolog', 'teen', 'teenag', 'tell',
             'temperatur', 'temporari', 'temporarili', 'ten', 'term', 'tesco', 'test', 'texa', 'text', 'th', 'thank',
             'thankyou', 'that', 'thatâ', 'the', 'their', 'them', 'themselves', 'then', 'there', 'thereâ', 'these',
             'they', 'theyâ', 'thi', 'thing', 'things', 'think', 'third', 'this', 'those', 'though', 'thought',
             'thousand', 'thread', 'threat', 'threaten', 'three', 'through', 'throughout', 'throw', 'thru', 'thursday',
             'ticket', 'till', 'tim', 'time', 'times', 'tin', 'tip', 'tire', 'tissu', 'to', 'today', 'todayâ', 'togeth',
             'together', 'toilet', 'toiletpap', 'toiletpaper', 'toiletpaperapocalyps', 'toiletpapercrisi',
             'toiletpaperpan', 'told', 'toll', 'tomorrow', 'ton', 'tonight', 'too', 'took', 'tool', 'top', 'topic',
             'toronto', 'total', 'touch', 'tough', 'tourism', 'toward', 'towel', 'town', 'tp', 'track', 'trade',
             'trader', 'traffic', 'train', 'transfer', 'transit', 'transmiss', 'transport', 'trash', 'travel', 'treat',
             'treatment', 'trend', 'tri', 'trick', 'trigger', 'trillion', 'trip', 'tripl', 'trolley', 'troubl', 'truck',
             'trucker', 'true', 'truli', 'trump', 'trust', 'truth', 'tuesday', 'tumbl', 'tune', 'turkey', 'turn', 'tv',
             'tweet', 'twice', 'twitter', 'two', 'type', 'uae', 'uber', 'uk', 'uklockdown', 'ultim', 'un', 'unabl',
             'uncertain', 'uncertainti', 'under', 'understand', 'unemploy', 'unfortun', 'union', 'unit', 'univers',
             'unless', 'unlik', 'unnecessari', 'unpreced', 'unsung', 'up', 'updat', 'update', 'updates', 'upon', 'ur',
             'urg', 'urgent', 'us', 'usa', 'usd', 'use', 'user', 'usual', 'util', 'vaccin', 'valley', 'valu', 'valuabl',
             'variou', 'veg', 'veget', 'veggi', 'vehicl', 'vendor', 'ventil', 'ventur', 'veri', 'version', 'via',
             'victim', 'video', 'view', 'villag', 'violat', 'viral', 'virtual', 'viru', 'virus', 'visit', 'vital',
             'volatil', 'volum', 'volunt', 'vote', 'voucher', 'vs', 'vulner', 'vulnerable', 'wa', 'wage', 'wait',
             'waitros', 'waiv', 'wake', 'walk', 'wall', 'walmart', 'wanna', 'want', 'war', 'warehous', 'warn', 'wash',
             'washington', 'washyourhand', 'wast', 'watch', 'water', 'wave', 'way', 'we', 'weak', 'wear', 'weather',
             'webinar', 'websit', 'website', 'wednesday', 'week', 'weekend', 'weekli', 'weeks', 'weird', 'welcom',
             'well', 'went', 'west', 'western', 'weâ', 'what', 'whatev', 'whatsapp', 'whatâ', 'wheat', 'when', 'where',
             'whether', 'whi', 'which', 'while', 'whilst', 'white', 'who', 'whole', 'wholesal', 'whose', 'whoâ', 'why',
             'wide', 'wife', 'wild', 'will', 'win', 'window', 'wine', 'wipe', 'wipes', 'wish', 'wit', 'with', 'within',
             'without', 'woman', 'women', 'wonder', 'wonâ', 'woolworth', 'word', 'work', 'worker', 'workers',
             'workforc', 'workfromhom', 'world', 'worldwid', 'worri', 'wors', 'worse', 'worst', 'worth', 'would', 'wow',
             'write', 'wrong', 'wrote', 'wsj', 'wtf', 'wuhan', 'ya', 'ye', 'yeah', 'year', 'years', 'yes', 'yesterday',
             'yet', 'york', 'you', 'young', 'your', 'yourself', 'youtub', 'youâ', 'yr', 'yâ', 'zero', 'zombi'],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
        for i in text:
            for j in range(len(X[0])):
                if str(i) == str(X[0][j]):
                    X[1][j] = int(X[1][j]) + 1
        A = np.array(X[1])
        result = self.model.predict([A])
        print(result)
        self.label_result1.setText("The Result is: {}".format(str(result[0])))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
